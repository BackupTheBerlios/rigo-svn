/////////////////////////////////////////////////////////////////////////////
// Name:        mainFrame.h
// Purpose:     
// Author:      Jeremy W
// Modified by: 
// Created:     07/18/06 20:02:50
// RCS-ID:      
// Copyright:   Copyright (C) 2006
// Licence:     GPL v2
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 07/18/06 20:02:50

#ifndef _MAINFRAME_H_
#define _MAINFRAME_H_

#if defined(__GNUG__) && !defined(__APPLE__)
#pragma interface "mainFrame.cpp"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/frame.h"
#include "wx/toolbar.h"
#include "wx/notebook.h"
#include "wx/statusbr.h"
#include "wx/combobox.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define Rigo 10000
#define SYMBOL_RIGOMAINFRAME_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxMAXIMIZE|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX
#define SYMBOL_RIGOMAINFRAME_TITLE _(".::R.I.G.O::.")
#define SYMBOL_RIGOMAINFRAME_IDNAME Rigo
#define SYMBOL_RIGOMAINFRAME_SIZE wxSize(800, 600)
#define SYMBOL_RIGOMAINFRAME_POSITION wxDefaultPosition
#define New 10003
#define Save 10017
#define Quit 10009
#define Cut 10006
#define Copy 10007
#define Profile 10004
#define Export 10014
#define NewSource 10005
#define NewQuote 10008
#define NewAnnotation 10018
#define Rigo_Toolbar 10001
#define Open 10011
#define Print 10015
#define Writebiblo 10016
#define ID_COMBOBOX 10002
#define ID_PANEL 10012
#define ID_NOTEBOOK 10010
#define ID_STATUSBAR 10013
#define wxUSE_GUI 1
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif
#ifndef wxFIXED_MINSIZE
#define wxFIXED_MINSIZE 0
#endif

/*!
 * rigoMainFrame class declaration
 */

class rigoMainFrame: public wxFrame
{    
    DECLARE_CLASS( rigoMainFrame )
    DECLARE_EVENT_TABLE()

public:
	/// Class Data
	wxArrayString sourceList;
    /// Constructors
    rigoMainFrame( );
    rigoMainFrame(	wxWindow* parent, 
					wxWindowID id = SYMBOL_RIGOMAINFRAME_IDNAME, 
					const wxString& caption = SYMBOL_RIGOMAINFRAME_TITLE, 
					const wxPoint& pos = SYMBOL_RIGOMAINFRAME_POSITION, 
					const wxSize& size = SYMBOL_RIGOMAINFRAME_SIZE, 
					long style = SYMBOL_RIGOMAINFRAME_STYLE );

    bool Create(	wxWindow* parent, 
					wxWindowID id = SYMBOL_RIGOMAINFRAME_IDNAME, 
					const wxString& caption = SYMBOL_RIGOMAINFRAME_TITLE, 
					const wxPoint& pos = SYMBOL_RIGOMAINFRAME_POSITION, 
					const wxSize& size = SYMBOL_RIGOMAINFRAME_SIZE, 
					long style = SYMBOL_RIGOMAINFRAME_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin rigoMainFrame event handler declarations

    /// wxEVT_CLOSE_WINDOW event handler for Rigo
    void OnCloseWindow( wxCloseEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for New
    void OnNewClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Save
    void OnSaveClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Quit
    void OnQuitClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Cut
    void OnCutClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Copy
    void OnCopyClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Profile
    void OnProfileClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Export
    void OnExportClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for NewSource
    void OnNewsourceClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for NewQuote
    void OnNewquoteClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for NewAnnotation
    void OnNewannotationClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Open
    void OnOpenClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Print
    void OnPrintClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for Writebiblo
    void OnWritebibloClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_COMBOBOX_SELECTED event handler for ID_COMBOBOX
    void OnComboboxSelected( wxCommandEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_COMBOBOX
    void OnComboboxUpdate( wxUpdateUIEvent& event );

////@end rigoMainFrame event handler declarations

////@begin rigoMainFrame member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end rigoMainFrame member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin rigoMainFrame member variables
////@end rigoMainFrame member variables
};

#endif
    // _MAINFRAME_H_
